{
  "name": "regex-robin",
  "displayName": "Regex Robin",
  "description": "Style, manipulate and create links in your editor using regular expressions.",
  "version": "1.0.2",
  "publisher": "DanLevett",
  "license": "MIT",
  "engines": {
    "vscode": "^1.74.0"
  },
  "repository": {
    "url": "https://github.com/dlevs/vscode-regex-robin"
  },
  "scripts": {
    "vscode:prepublish": "npm run build && npm run lint && npm run test",
    "build": "npm run build:extension && npm run build:config",
    "build:extension": "tsc",
    "build:config": "ts-node ./src/scripts/generateConfigSchema.ts",
    "watch": "tsc -watch",
    "lint": "eslint . --ext .ts,.tsx",
    "test": "vitest"
  },
  "dependencies": {
    "lodash": "^4.17.21",
    "regexp-match-indices": "^1.0.2"
  },
  "devDependencies": {
    "@types/lodash": "^4.14.191",
    "@types/node": "^18.11.17",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.47.0",
    "@typescript-eslint/parser": "^5.47.0",
    "deref": "^0.7.6",
    "eslint": "^8.30.0",
    "eslint-config-prettier": "^8.5.0",
    "prettier": "^2.8.1",
    "ts-json-schema-generator": "^1.2.0",
    "ts-node": "^10.9.1",
    "type-fest": "^3.4.0",
    "typescript": "^4.9.4",
    "vitest": "^0.26.2"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "icon": "assets/icon.png",
  "keywords": [
    "regex",
    "color",
    "highlight",
    "link",
    "replace",
    "inline",
    "shorten",
    "decorate",
    "pattern",
    "auto",
    "autolink"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "Regex Robin",
      "type": "object",
      "properties": {
        "regexrobin.rules": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "regex": {
                "type": "string"
              },
              "regexFlags": {
                "type": "object",
                "properties": {
                  "raw": {
                    "type": "string"
                  },
                  "global": {
                    "type": "boolean",
                    "description": "TODO: Test comment"
                  },
                  "caseInsensitive": {
                    "type": "boolean"
                  },
                  "multiline": {
                    "type": "boolean"
                  },
                  "dotAll": {
                    "type": "boolean"
                  },
                  "unicode": {
                    "type": "boolean"
                  },
                  "sticky": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "raw"
                ],
                "additionalProperties": false
              },
              "languages": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "tree": {
                "type": "object",
                "properties": {
                  "group": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  }
                },
                "required": [
                  "group",
                  "label"
                ],
                "additionalProperties": false
              },
              "effects": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "captureGroup": {
                      "type": "number"
                    },
                    "link": {
                      "type": "string"
                    },
                    "inlineReplacement": {
                      "type": "string"
                    },
                    "inlineReplacementStyle": {
                      "type": "object",
                      "properties": {
                        "contentIconPath": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "scheme": {
                                  "type": "string",
                                  "description": "Scheme is the `http` part of `http://www.example.com/some/path?query#fragment`. The part before the first colon."
                                },
                                "authority": {
                                  "type": "string",
                                  "description": "Authority is the `www.example.com` part of `http://www.example.com/some/path?query#fragment`. The part between the first double slashes and the next slash."
                                },
                                "path": {
                                  "type": "string",
                                  "description": "Path is the `/some/path` part of `http://www.example.com/some/path?query#fragment`."
                                },
                                "query": {
                                  "type": "string",
                                  "description": "Query is the `query` part of `http://www.example.com/some/path?query#fragment`."
                                },
                                "fragment": {
                                  "type": "string",
                                  "description": "Fragment is the `fragment` part of `http://www.example.com/some/path?query#fragment`."
                                },
                                "fsPath": {
                                  "type": "string",
                                  "description": "The string representing the corresponding file system path of this Uri.\n\nWill handle UNC paths and normalize windows drive letters to lower-case. Also uses the platform specific path separator.\n\n* Will *not* validate the path for invalid characters and semantics.\n* Will *not* look at the scheme of this Uri.\n* The resulting string shall *not* be used for display purposes but for disk operations, like `readFile` et al.\n\nThe *difference* to the  {@linkcode  Uri.path path } -property is the use of the platform specific path separator and the handling of UNC paths. The sample below outlines the difference: ```ts const u = URI.parse('file://server/c$/folder/file.txt') u.authority === 'server' u.path === '/shares/c$/file.txt' u.fsPath === '\\\\server\\c$\\folder\\file.txt' ```"
                                }
                              },
                              "required": [
                                "scheme",
                                "authority",
                                "path",
                                "query",
                                "fragment",
                                "fsPath"
                              ],
                              "additionalProperties": false,
                              "description": "A universal resource identifier representing either a file on disk or another resource, like untitled resources."
                            }
                          ],
                          "description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon or a text can be shown, but not both."
                        },
                        "border": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to the decoration attachment."
                        },
                        "borderColor": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "A reference to one of the workbench colors as defined in https://code.visualstudio.com/docs/getstarted/theme-color-reference. Using a theme color is preferred over a custom color as it gives theme authors and users the possibility to change the color."
                            }
                          ],
                          "description": "CSS styling property that will be applied to text enclosed by a decoration."
                        },
                        "fontStyle": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to the decoration attachment."
                        },
                        "fontWeight": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to the decoration attachment."
                        },
                        "textDecoration": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to the decoration attachment."
                        },
                        "color": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "A reference to one of the workbench colors as defined in https://code.visualstudio.com/docs/getstarted/theme-color-reference. Using a theme color is preferred over a custom color as it gives theme authors and users the possibility to change the color."
                            }
                          ],
                          "description": "CSS styling property that will be applied to the decoration attachment."
                        },
                        "backgroundColor": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "A reference to one of the workbench colors as defined in https://code.visualstudio.com/docs/getstarted/theme-color-reference. Using a theme color is preferred over a custom color as it gives theme authors and users the possibility to change the color."
                            }
                          ],
                          "description": "CSS styling property that will be applied to the decoration attachment."
                        },
                        "margin": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to the decoration attachment."
                        },
                        "width": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to the decoration attachment."
                        },
                        "height": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to the decoration attachment."
                        }
                      },
                      "additionalProperties": false
                    },
                    "hoverMessage": {
                      "type": "string"
                    },
                    "style": {
                      "type": "object",
                      "properties": {
                        "backgroundColor": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "A reference to one of the workbench colors as defined in https://code.visualstudio.com/docs/getstarted/theme-color-reference. Using a theme color is preferred over a custom color as it gives theme authors and users the possibility to change the color."
                            }
                          ],
                          "description": "Background color of the decoration. Use rgba() and define transparent background colors to play well with other decorations. Alternatively a color from the color registry can be  {@link  ThemeColor referenced } ."
                        },
                        "outline": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to text enclosed by a decoration."
                        },
                        "outlineColor": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "A reference to one of the workbench colors as defined in https://code.visualstudio.com/docs/getstarted/theme-color-reference. Using a theme color is preferred over a custom color as it gives theme authors and users the possibility to change the color."
                            }
                          ],
                          "description": "CSS styling property that will be applied to text enclosed by a decoration. Better use 'outline' for setting one or more of the individual outline properties."
                        },
                        "outlineStyle": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to text enclosed by a decoration. Better use 'outline' for setting one or more of the individual outline properties."
                        },
                        "outlineWidth": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to text enclosed by a decoration. Better use 'outline' for setting one or more of the individual outline properties."
                        },
                        "border": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to text enclosed by a decoration."
                        },
                        "borderColor": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "A reference to one of the workbench colors as defined in https://code.visualstudio.com/docs/getstarted/theme-color-reference. Using a theme color is preferred over a custom color as it gives theme authors and users the possibility to change the color."
                            }
                          ],
                          "description": "CSS styling property that will be applied to text enclosed by a decoration. Better use 'border' for setting one or more of the individual border properties."
                        },
                        "borderRadius": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to text enclosed by a decoration. Better use 'border' for setting one or more of the individual border properties."
                        },
                        "borderSpacing": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to text enclosed by a decoration. Better use 'border' for setting one or more of the individual border properties."
                        },
                        "borderStyle": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to text enclosed by a decoration. Better use 'border' for setting one or more of the individual border properties."
                        },
                        "borderWidth": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to text enclosed by a decoration. Better use 'border' for setting one or more of the individual border properties."
                        },
                        "fontStyle": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to text enclosed by a decoration."
                        },
                        "fontWeight": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to text enclosed by a decoration."
                        },
                        "textDecoration": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to text enclosed by a decoration."
                        },
                        "cursor": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to text enclosed by a decoration."
                        },
                        "color": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "A reference to one of the workbench colors as defined in https://code.visualstudio.com/docs/getstarted/theme-color-reference. Using a theme color is preferred over a custom color as it gives theme authors and users the possibility to change the color."
                            }
                          ],
                          "description": "CSS styling property that will be applied to text enclosed by a decoration."
                        },
                        "opacity": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to text enclosed by a decoration."
                        },
                        "letterSpacing": {
                          "type": "string",
                          "description": "CSS styling property that will be applied to text enclosed by a decoration."
                        },
                        "gutterIconPath": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "scheme": {
                                  "type": "string",
                                  "description": "Scheme is the `http` part of `http://www.example.com/some/path?query#fragment`. The part before the first colon."
                                },
                                "authority": {
                                  "type": "string",
                                  "description": "Authority is the `www.example.com` part of `http://www.example.com/some/path?query#fragment`. The part between the first double slashes and the next slash."
                                },
                                "path": {
                                  "type": "string",
                                  "description": "Path is the `/some/path` part of `http://www.example.com/some/path?query#fragment`."
                                },
                                "query": {
                                  "type": "string",
                                  "description": "Query is the `query` part of `http://www.example.com/some/path?query#fragment`."
                                },
                                "fragment": {
                                  "type": "string",
                                  "description": "Fragment is the `fragment` part of `http://www.example.com/some/path?query#fragment`."
                                },
                                "fsPath": {
                                  "type": "string",
                                  "description": "The string representing the corresponding file system path of this Uri.\n\nWill handle UNC paths and normalize windows drive letters to lower-case. Also uses the platform specific path separator.\n\n* Will *not* validate the path for invalid characters and semantics.\n* Will *not* look at the scheme of this Uri.\n* The resulting string shall *not* be used for display purposes but for disk operations, like `readFile` et al.\n\nThe *difference* to the  {@linkcode  Uri.path path } -property is the use of the platform specific path separator and the handling of UNC paths. The sample below outlines the difference: ```ts const u = URI.parse('file://server/c$/folder/file.txt') u.authority === 'server' u.path === '/shares/c$/file.txt' u.fsPath === '\\\\server\\c$\\folder\\file.txt' ```"
                                }
                              },
                              "required": [
                                "scheme",
                                "authority",
                                "path",
                                "query",
                                "fragment",
                                "fsPath"
                              ],
                              "additionalProperties": false,
                              "description": "A universal resource identifier representing either a file on disk or another resource, like untitled resources."
                            }
                          ],
                          "description": "An **absolute path** or an URI to an image to be rendered in the gutter."
                        },
                        "gutterIconSize": {
                          "type": "string",
                          "description": "Specifies the size of the gutter icon. Available values are 'auto', 'contain', 'cover' and any percentage value. For further information: https://msdn.microsoft.com/en-us/library/jj127316(v=vs.85).aspx"
                        },
                        "overviewRulerColor": {
                          "anyOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "A reference to one of the workbench colors as defined in https://code.visualstudio.com/docs/getstarted/theme-color-reference. Using a theme color is preferred over a custom color as it gives theme authors and users the possibility to change the color."
                            }
                          ],
                          "description": "The color of the decoration in the overview ruler. Use rgba() and define transparent colors to play well with other decorations."
                        },
                        "before": {
                          "description": "Defines the rendering options of the attachment that is inserted before the decorated text.",
                          "type": "object",
                          "properties": {
                            "contentText": {
                              "type": "string",
                              "description": "Defines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both."
                            },
                            "contentIconPath": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "scheme": {
                                      "type": "string",
                                      "description": "Scheme is the `http` part of `http://www.example.com/some/path?query#fragment`. The part before the first colon."
                                    },
                                    "authority": {
                                      "type": "string",
                                      "description": "Authority is the `www.example.com` part of `http://www.example.com/some/path?query#fragment`. The part between the first double slashes and the next slash."
                                    },
                                    "path": {
                                      "type": "string",
                                      "description": "Path is the `/some/path` part of `http://www.example.com/some/path?query#fragment`."
                                    },
                                    "query": {
                                      "type": "string",
                                      "description": "Query is the `query` part of `http://www.example.com/some/path?query#fragment`."
                                    },
                                    "fragment": {
                                      "type": "string",
                                      "description": "Fragment is the `fragment` part of `http://www.example.com/some/path?query#fragment`."
                                    },
                                    "fsPath": {
                                      "type": "string",
                                      "description": "The string representing the corresponding file system path of this Uri.\n\nWill handle UNC paths and normalize windows drive letters to lower-case. Also uses the platform specific path separator.\n\n* Will *not* validate the path for invalid characters and semantics.\n* Will *not* look at the scheme of this Uri.\n* The resulting string shall *not* be used for display purposes but for disk operations, like `readFile` et al.\n\nThe *difference* to the  {@linkcode  Uri.path path } -property is the use of the platform specific path separator and the handling of UNC paths. The sample below outlines the difference: ```ts const u = URI.parse('file://server/c$/folder/file.txt') u.authority === 'server' u.path === '/shares/c$/file.txt' u.fsPath === '\\\\server\\c$\\folder\\file.txt' ```"
                                    }
                                  },
                                  "required": [
                                    "scheme",
                                    "authority",
                                    "path",
                                    "query",
                                    "fragment",
                                    "fsPath"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A universal resource identifier representing either a file on disk or another resource, like untitled resources."
                                }
                              ],
                              "description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon or a text can be shown, but not both."
                            },
                            "border": {
                              "type": "string",
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "borderColor": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "description": "A reference to one of the workbench colors as defined in https://code.visualstudio.com/docs/getstarted/theme-color-reference. Using a theme color is preferred over a custom color as it gives theme authors and users the possibility to change the color."
                                }
                              ],
                              "description": "CSS styling property that will be applied to text enclosed by a decoration."
                            },
                            "fontStyle": {
                              "type": "string",
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "fontWeight": {
                              "type": "string",
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "textDecoration": {
                              "type": "string",
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "color": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "description": "A reference to one of the workbench colors as defined in https://code.visualstudio.com/docs/getstarted/theme-color-reference. Using a theme color is preferred over a custom color as it gives theme authors and users the possibility to change the color."
                                }
                              ],
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "backgroundColor": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "description": "A reference to one of the workbench colors as defined in https://code.visualstudio.com/docs/getstarted/theme-color-reference. Using a theme color is preferred over a custom color as it gives theme authors and users the possibility to change the color."
                                }
                              ],
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "margin": {
                              "type": "string",
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "width": {
                              "type": "string",
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "height": {
                              "type": "string",
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            }
                          },
                          "additionalProperties": false
                        },
                        "after": {
                          "description": "Defines the rendering options of the attachment that is inserted after the decorated text.",
                          "type": "object",
                          "properties": {
                            "contentText": {
                              "type": "string",
                              "description": "Defines a text content that is shown in the attachment. Either an icon or a text can be shown, but not both."
                            },
                            "contentIconPath": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "scheme": {
                                      "type": "string",
                                      "description": "Scheme is the `http` part of `http://www.example.com/some/path?query#fragment`. The part before the first colon."
                                    },
                                    "authority": {
                                      "type": "string",
                                      "description": "Authority is the `www.example.com` part of `http://www.example.com/some/path?query#fragment`. The part between the first double slashes and the next slash."
                                    },
                                    "path": {
                                      "type": "string",
                                      "description": "Path is the `/some/path` part of `http://www.example.com/some/path?query#fragment`."
                                    },
                                    "query": {
                                      "type": "string",
                                      "description": "Query is the `query` part of `http://www.example.com/some/path?query#fragment`."
                                    },
                                    "fragment": {
                                      "type": "string",
                                      "description": "Fragment is the `fragment` part of `http://www.example.com/some/path?query#fragment`."
                                    },
                                    "fsPath": {
                                      "type": "string",
                                      "description": "The string representing the corresponding file system path of this Uri.\n\nWill handle UNC paths and normalize windows drive letters to lower-case. Also uses the platform specific path separator.\n\n* Will *not* validate the path for invalid characters and semantics.\n* Will *not* look at the scheme of this Uri.\n* The resulting string shall *not* be used for display purposes but for disk operations, like `readFile` et al.\n\nThe *difference* to the  {@linkcode  Uri.path path } -property is the use of the platform specific path separator and the handling of UNC paths. The sample below outlines the difference: ```ts const u = URI.parse('file://server/c$/folder/file.txt') u.authority === 'server' u.path === '/shares/c$/file.txt' u.fsPath === '\\\\server\\c$\\folder\\file.txt' ```"
                                    }
                                  },
                                  "required": [
                                    "scheme",
                                    "authority",
                                    "path",
                                    "query",
                                    "fragment",
                                    "fsPath"
                                  ],
                                  "additionalProperties": false,
                                  "description": "A universal resource identifier representing either a file on disk or another resource, like untitled resources."
                                }
                              ],
                              "description": "An **absolute path** or an URI to an image to be rendered in the attachment. Either an icon or a text can be shown, but not both."
                            },
                            "border": {
                              "type": "string",
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "borderColor": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "description": "A reference to one of the workbench colors as defined in https://code.visualstudio.com/docs/getstarted/theme-color-reference. Using a theme color is preferred over a custom color as it gives theme authors and users the possibility to change the color."
                                }
                              ],
                              "description": "CSS styling property that will be applied to text enclosed by a decoration."
                            },
                            "fontStyle": {
                              "type": "string",
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "fontWeight": {
                              "type": "string",
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "textDecoration": {
                              "type": "string",
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "color": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "description": "A reference to one of the workbench colors as defined in https://code.visualstudio.com/docs/getstarted/theme-color-reference. Using a theme color is preferred over a custom color as it gives theme authors and users the possibility to change the color."
                                }
                              ],
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "backgroundColor": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "description": "A reference to one of the workbench colors as defined in https://code.visualstudio.com/docs/getstarted/theme-color-reference. Using a theme color is preferred over a custom color as it gives theme authors and users the possibility to change the color."
                                }
                              ],
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "margin": {
                              "type": "string",
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "width": {
                              "type": "string",
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            },
                            "height": {
                              "type": "string",
                              "description": "CSS styling property that will be applied to the decoration attachment."
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "description": "Represents theme specific rendering styles for a  {@link  TextEditorDecorationType text editor decoration } ."
                    },
                    "decoration": {
                      "description": "Represents a handle to a set of decorations sharing the same  {@link  DecorationRenderOptions styling options }  in a  {@link  TextEditor text editor } .\n\nTo get an instance of a `TextEditorDecorationType` use\n {@link  window.createTextEditorDecorationType createTextEditorDecorationType } .",
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Internal representation of the handle."
                        }
                      },
                      "required": [
                        "key"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "captureGroup",
                    "decoration"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "regex",
              "regexFlags",
              "languages",
              "effects"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "views": {
      "explorer": [
        {
          "id": "regexRobin",
          "name": "Regex Robin",
          "contextualTitle": "Regex matches"
        }
      ]
    }
  }
}
